ARM GAS  /tmp/cclhyYvQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB130:
  29              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cclhyYvQ.s 			page 2


  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern HCD_HandleTypeDef hhcd_USB_OTG_HS;
  59:Core/Src/stm32f4xx_it.c **** extern DMA2D_HandleTypeDef hdma2d;
  60:Core/Src/stm32f4xx_it.c **** extern LTDC_HandleTypeDef hltdc;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  62:Core/Src/stm32f4xx_it.c **** 
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /**
  71:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f4xx_it.c ****   */
  73:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f4xx_it.c **** {
  30              		.loc 1 74 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f4xx_it.c **** 
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  /tmp/cclhyYvQ.s 			page 3


  37              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32f4xx_it.c ****   {
  81:Core/Src/stm32f4xx_it.c ****   }
  38              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32f4xx_it.c ****   {
  39              		.loc 1 79 9 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE130:
  44 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.p2align 2,,3
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	HardFault_Handler:
  53              	.LFB131:
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c **** }
  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c **** /**
  86:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f4xx_it.c ****   */
  88:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f4xx_it.c **** {
  54              		.loc 1 89 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L5:
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c **** 
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****   while (1)
  61              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32f4xx_it.c ****   {
  95:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   }
  62              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32f4xx_it.c ****   {
  63              		.loc 1 93 9 discriminator 1 view .LVU7
  64 0000 FEE7     		b	.L5
  65              		.cfi_endproc
  66              	.LFE131:
  68 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.global	MemManage_Handler
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	MemManage_Handler:
  77              	.LFB132:
ARM GAS  /tmp/cclhyYvQ.s 			page 4


  98:Core/Src/stm32f4xx_it.c **** }
  99:Core/Src/stm32f4xx_it.c **** 
 100:Core/Src/stm32f4xx_it.c **** /**
 101:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f4xx_it.c ****   */
 103:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f4xx_it.c **** {
  78              		.loc 1 104 1 view -0
  79              		.cfi_startproc
  80              		@ Volatile: function does not return.
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.L7:
 105:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c **** 
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   while (1)
  85              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32f4xx_it.c ****   {
 110:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   }
  86              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32f4xx_it.c ****   {
  87              		.loc 1 108 9 discriminator 1 view .LVU11
  88 0000 FEE7     		b	.L7
  89              		.cfi_endproc
  90              	.LFE132:
  92 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  93              		.align	1
  94              		.p2align 2,,3
  95              		.global	BusFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	BusFault_Handler:
 101              	.LFB133:
 113:Core/Src/stm32f4xx_it.c **** }
 114:Core/Src/stm32f4xx_it.c **** 
 115:Core/Src/stm32f4xx_it.c **** /**
 116:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32f4xx_it.c ****   */
 118:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f4xx_it.c **** {
 102              		.loc 1 119 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
 120:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c **** 
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   while (1)
 109              		.loc 1 123 3 discriminator 1 view .LVU13
ARM GAS  /tmp/cclhyYvQ.s 			page 5


 124:Core/Src/stm32f4xx_it.c ****   {
 125:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   }
 110              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32f4xx_it.c ****   {
 111              		.loc 1 123 9 discriminator 1 view .LVU15
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE133:
 116 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	UsageFault_Handler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	UsageFault_Handler:
 125              	.LFB134:
 128:Core/Src/stm32f4xx_it.c **** }
 129:Core/Src/stm32f4xx_it.c **** 
 130:Core/Src/stm32f4xx_it.c **** /**
 131:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f4xx_it.c ****   */
 133:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f4xx_it.c **** {
 126              		.loc 1 134 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.L11:
 135:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c **** 
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   while (1)
 133              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32f4xx_it.c ****   {
 140:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   }
 134              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32f4xx_it.c ****   {
 135              		.loc 1 138 9 discriminator 1 view .LVU19
 136 0000 FEE7     		b	.L11
 137              		.cfi_endproc
 138              	.LFE134:
 140 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.p2align 2,,3
 143              		.global	DebugMon_Handler
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	DebugMon_Handler:
 149              	.LFB135:
ARM GAS  /tmp/cclhyYvQ.s 			page 6


 143:Core/Src/stm32f4xx_it.c **** }
 144:Core/Src/stm32f4xx_it.c **** 
 145:Core/Src/stm32f4xx_it.c **** /**
 146:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f4xx_it.c ****   */
 148:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f4xx_it.c **** {
 150              		.loc 1 149 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c **** 
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** }
 155              		.loc 1 156 1 view .LVU21
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE135:
 160 0002 00BF     		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	TIM6_DAC_IRQHandler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	TIM6_DAC_IRQHandler:
 169              	.LFB136:
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 159:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 160:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 163:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c **** /**
 166:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 167:Core/Src/stm32f4xx_it.c ****   */
 168:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 169:Core/Src/stm32f4xx_it.c **** {
 170              		.loc 1 169 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 175              		.loc 1 173 3 view .LVU23
 176 0000 0148     		ldr	r0, .L14
 177 0002 FFF7FEBF 		b	HAL_TIM_IRQHandler
ARM GAS  /tmp/cclhyYvQ.s 			page 7


 178              	.LVL0:
 179              	.L15:
 180 0006 00BF     		.align	2
 181              	.L14:
 182 0008 00000000 		.word	htim6
 183              		.cfi_endproc
 184              	.LFE136:
 186              		.section	.text.OTG_HS_IRQHandler,"ax",%progbits
 187              		.align	1
 188              		.p2align 2,,3
 189              		.global	OTG_HS_IRQHandler
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	OTG_HS_IRQHandler:
 195              	.LFB137:
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 177:Core/Src/stm32f4xx_it.c **** }
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c **** /**
 180:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go HS global interrupt.
 181:Core/Src/stm32f4xx_it.c ****   */
 182:Core/Src/stm32f4xx_it.c **** void OTG_HS_IRQHandler(void)
 183:Core/Src/stm32f4xx_it.c **** {
 196              		.loc 1 183 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 0 */
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 0 */
 187:Core/Src/stm32f4xx_it.c ****   HAL_HCD_IRQHandler(&hhcd_USB_OTG_HS);
 201              		.loc 1 187 3 view .LVU25
 202 0000 0148     		ldr	r0, .L17
 203 0002 FFF7FEBF 		b	HAL_HCD_IRQHandler
 204              	.LVL1:
 205              	.L18:
 206 0006 00BF     		.align	2
 207              	.L17:
 208 0008 00000000 		.word	hhcd_USB_OTG_HS
 209              		.cfi_endproc
 210              	.LFE137:
 212              		.section	.text.LTDC_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.p2align 2,,3
 215              		.global	LTDC_IRQHandler
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 220              	LTDC_IRQHandler:
 221              	.LFB138:
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 1 */
 189:Core/Src/stm32f4xx_it.c **** 
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 1 */
ARM GAS  /tmp/cclhyYvQ.s 			page 8


 191:Core/Src/stm32f4xx_it.c **** }
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c **** /**
 194:Core/Src/stm32f4xx_it.c ****   * @brief This function handles LTDC global interrupt.
 195:Core/Src/stm32f4xx_it.c ****   */
 196:Core/Src/stm32f4xx_it.c **** void LTDC_IRQHandler(void)
 197:Core/Src/stm32f4xx_it.c **** {
 222              		.loc 1 197 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 0 */
 199:Core/Src/stm32f4xx_it.c **** 
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE END LTDC_IRQn 0 */
 201:Core/Src/stm32f4xx_it.c ****   HAL_LTDC_IRQHandler(&hltdc);
 227              		.loc 1 201 3 view .LVU27
 228 0000 0148     		ldr	r0, .L20
 229 0002 FFF7FEBF 		b	HAL_LTDC_IRQHandler
 230              	.LVL2:
 231              	.L21:
 232 0006 00BF     		.align	2
 233              	.L20:
 234 0008 00000000 		.word	hltdc
 235              		.cfi_endproc
 236              	.LFE138:
 238              		.section	.text.DMA2D_IRQHandler,"ax",%progbits
 239              		.align	1
 240              		.p2align 2,,3
 241              		.global	DMA2D_IRQHandler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	DMA2D_IRQHandler:
 247              	.LFB139:
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 1 */
 203:Core/Src/stm32f4xx_it.c **** 
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE END LTDC_IRQn 1 */
 205:Core/Src/stm32f4xx_it.c **** }
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c **** /**
 208:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2D global interrupt.
 209:Core/Src/stm32f4xx_it.c ****   */
 210:Core/Src/stm32f4xx_it.c **** void DMA2D_IRQHandler(void)
 211:Core/Src/stm32f4xx_it.c **** {
 248              		.loc 1 211 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 212:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2D_IRQn 0 */
 213:Core/Src/stm32f4xx_it.c **** 
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2D_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c ****   HAL_DMA2D_IRQHandler(&hdma2d);
 253              		.loc 1 215 3 view .LVU29
 254 0000 0148     		ldr	r0, .L23
 255 0002 FFF7FEBF 		b	HAL_DMA2D_IRQHandler
ARM GAS  /tmp/cclhyYvQ.s 			page 9


 256              	.LVL3:
 257              	.L24:
 258 0006 00BF     		.align	2
 259              	.L23:
 260 0008 00000000 		.word	hdma2d
 261              		.cfi_endproc
 262              	.LFE139:
 264              		.text
 265              	.Letext0:
 266              		.file 2 "/home/irfan/Desktop/arm/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/gcc-arm-none-eabi-10.
 267              		.file 3 "/home/irfan/Desktop/arm/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/gcc-arm-none-eabi-10.
 268              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 269              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 270              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 271              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma2d.h"
 272              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_ltdc.h"
 273              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 274              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 275              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
ARM GAS  /tmp/cclhyYvQ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cclhyYvQ.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cclhyYvQ.s:45     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:52     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cclhyYvQ.s:69     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:76     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cclhyYvQ.s:93     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:100    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cclhyYvQ.s:117    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:124    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cclhyYvQ.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cclhyYvQ.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cclhyYvQ.s:161    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/cclhyYvQ.s:168    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/cclhyYvQ.s:182    .text.TIM6_DAC_IRQHandler:0000000000000008 $d
     /tmp/cclhyYvQ.s:187    .text.OTG_HS_IRQHandler:0000000000000000 $t
     /tmp/cclhyYvQ.s:194    .text.OTG_HS_IRQHandler:0000000000000000 OTG_HS_IRQHandler
     /tmp/cclhyYvQ.s:208    .text.OTG_HS_IRQHandler:0000000000000008 $d
     /tmp/cclhyYvQ.s:213    .text.LTDC_IRQHandler:0000000000000000 $t
     /tmp/cclhyYvQ.s:220    .text.LTDC_IRQHandler:0000000000000000 LTDC_IRQHandler
     /tmp/cclhyYvQ.s:234    .text.LTDC_IRQHandler:0000000000000008 $d
     /tmp/cclhyYvQ.s:239    .text.DMA2D_IRQHandler:0000000000000000 $t
     /tmp/cclhyYvQ.s:246    .text.DMA2D_IRQHandler:0000000000000000 DMA2D_IRQHandler
     /tmp/cclhyYvQ.s:260    .text.DMA2D_IRQHandler:0000000000000008 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim6
HAL_HCD_IRQHandler
hhcd_USB_OTG_HS
HAL_LTDC_IRQHandler
hltdc
HAL_DMA2D_IRQHandler
hdma2d
